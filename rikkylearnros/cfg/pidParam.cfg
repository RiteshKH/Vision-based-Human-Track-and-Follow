#! /usr/bin/env python
# Forearm camera configuration

PACKAGE='rikkylearnros'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

pidX = gen.add_group("pid x")
pidY = gen.add_group("pid y")
pidYaw = gen.add_group("pid yaw")
pidRange = gen.add_group("pid range")


pidX.add("kPx", double_t,0, "P gain in Controller",1.3,0, 5)
#gen.add("kIxy", double_t,0, "I gain in Controller",0.0,0, 5)
pidX.add("kDx", double_t,0, "D gain in Controller",0.05,0, 5)
#gen.add("iMaxXY", double_t,0, "Max I limit",0,0, 50)
pidX.add("pMaxX", double_t,0, "Max P limit",2,0, 50)

pidY.add("kPy", double_t,0, "P gain in Controller",0.5,0, 5)
#gen.add("kIxy", double_t,0, "I gain in Controller",0.0,0, 5)
pidY.add("kDy", double_t,0, "D gain in Controller",0,0, 5)
#gen.add("iMaxXY", double_t,0, "Max I limit",0,0, 50)
pidY.add("pMaxY", double_t,0, "Max P limit",2,0, 50)

pidRange.add("kPrange", double_t,0, "P gain in Controller",0.05,0, 5)
#gen.add("kIrange", double_t,0, "I gain in Controller",0.0,0, 5)
pidRange.add("kDrange", double_t,0, "D gain in Controller",0,0, 5)
#gen.add("iMaxRange", double_t,0, "Max I limit",0,0, 50)
pidRange.add("pMaxRange", double_t,0, "Max P limit",2,0, 50)

pidYaw.add("kPyaw", double_t,0, "D gain in Controller",0.00,0, 5)
#gen.add("kIyaw", double_t,0, "D gain in Controller",0,0, 5)
pidYaw.add("kDyaw", double_t,0, "D gain in Controller",0,0, 5)
#gen.add("iMaxYaw", double_t,0, "Max I limit",0,0, 50)
pidYaw.add("pMaxYaw", double_t,0, "Max P limit",2,0, 50)

gen.add("LPF", double_t,0, "PID LPF konst",20,0, 100)
gen.add("min_confidance", double_t,0, "Minimal confidance, to be able track object",10,0, 100)


exit(gen.generate(PACKAGE, "rikkylearnros", "pidParam"))
